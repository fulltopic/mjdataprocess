// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO2

package caffe2.caffe2

/** DeviceType that Caffe2 currently supports.
  * Note: if you add a device type, make sure you add the corresponding device
  * line in the DeviceTypeName() function in caffe2/utils/proto_utils.cc
  * and update c10/core/DeviceType.h
  */
sealed abstract class DeviceTypeProto(val value: _root_.scala.Int) extends _root_.scalapb.GeneratedEnum {
  type EnumType = DeviceTypeProto
  def isProtoCpu: _root_.scala.Boolean = false
  def isProtoCuda: _root_.scala.Boolean = false
  def isProtoMkldnn: _root_.scala.Boolean = false
  def isProtoOpengl: _root_.scala.Boolean = false
  def isProtoOpencl: _root_.scala.Boolean = false
  def isProtoIdeep: _root_.scala.Boolean = false
  def isProtoHip: _root_.scala.Boolean = false
  def isProtoFpga: _root_.scala.Boolean = false
  def isProtoMsnpu: _root_.scala.Boolean = false
  def isProtoXla: _root_.scala.Boolean = false
  def isProtoCompileTimeMaxDeviceTypes: _root_.scala.Boolean = false
  def companion: _root_.scalapb.GeneratedEnumCompanion[DeviceTypeProto] = caffe2.caffe2.DeviceTypeProto
  final def asRecognized: _root_.scala.Option[caffe2.caffe2.DeviceTypeProto.Recognized] = if (isUnrecognized) _root_.scala.None else _root_.scala.Some(this.asInstanceOf[caffe2.caffe2.DeviceTypeProto.Recognized])
}

object DeviceTypeProto extends _root_.scalapb.GeneratedEnumCompanion[DeviceTypeProto] {
  sealed trait Recognized extends DeviceTypeProto
  implicit def enumCompanion: _root_.scalapb.GeneratedEnumCompanion[DeviceTypeProto] = this
  /** In default, we will use CPU.
    */
  @SerialVersionUID(0L)
  case object PROTO_CPU extends DeviceTypeProto(0) with DeviceTypeProto.Recognized {
    val index = 0
    val name = "PROTO_CPU"
    override def isProtoCpu: _root_.scala.Boolean = true
  }
  
  /** CUDA.
    */
  @SerialVersionUID(0L)
  case object PROTO_CUDA extends DeviceTypeProto(1) with DeviceTypeProto.Recognized {
    val index = 1
    val name = "PROTO_CUDA"
    override def isProtoCuda: _root_.scala.Boolean = true
  }
  
  /** Reserved for explicit MKLDNN
    */
  @SerialVersionUID(0L)
  case object PROTO_MKLDNN extends DeviceTypeProto(2) with DeviceTypeProto.Recognized {
    val index = 2
    val name = "PROTO_MKLDNN"
    override def isProtoMkldnn: _root_.scala.Boolean = true
  }
  
  /** OpenGL
    */
  @SerialVersionUID(0L)
  case object PROTO_OPENGL extends DeviceTypeProto(3) with DeviceTypeProto.Recognized {
    val index = 3
    val name = "PROTO_OPENGL"
    override def isProtoOpengl: _root_.scala.Boolean = true
  }
  
  /** OpenCL
    */
  @SerialVersionUID(0L)
  case object PROTO_OPENCL extends DeviceTypeProto(4) with DeviceTypeProto.Recognized {
    val index = 4
    val name = "PROTO_OPENCL"
    override def isProtoOpencl: _root_.scala.Boolean = true
  }
  
  /** IDEEP.
    */
  @SerialVersionUID(0L)
  case object PROTO_IDEEP extends DeviceTypeProto(5) with DeviceTypeProto.Recognized {
    val index = 5
    val name = "PROTO_IDEEP"
    override def isProtoIdeep: _root_.scala.Boolean = true
  }
  
  /** AMD HIP
    */
  @SerialVersionUID(0L)
  case object PROTO_HIP extends DeviceTypeProto(6) with DeviceTypeProto.Recognized {
    val index = 6
    val name = "PROTO_HIP"
    override def isProtoHip: _root_.scala.Boolean = true
  }
  
  /** FPGA
    */
  @SerialVersionUID(0L)
  case object PROTO_FPGA extends DeviceTypeProto(7) with DeviceTypeProto.Recognized {
    val index = 7
    val name = "PROTO_FPGA"
    override def isProtoFpga: _root_.scala.Boolean = true
  }
  
  /** MSNPU
    */
  @SerialVersionUID(0L)
  case object PROTO_MSNPU extends DeviceTypeProto(8) with DeviceTypeProto.Recognized {
    val index = 8
    val name = "PROTO_MSNPU"
    override def isProtoMsnpu: _root_.scala.Boolean = true
  }
  
  /** XLA / TPU
    */
  @SerialVersionUID(0L)
  case object PROTO_XLA extends DeviceTypeProto(9) with DeviceTypeProto.Recognized {
    val index = 9
    val name = "PROTO_XLA"
    override def isProtoXla: _root_.scala.Boolean = true
  }
  
  /** Change the following number if you add more devices in the code.
    */
  @SerialVersionUID(0L)
  case object PROTO_COMPILE_TIME_MAX_DEVICE_TYPES extends DeviceTypeProto(10) with DeviceTypeProto.Recognized {
    val index = 10
    val name = "PROTO_COMPILE_TIME_MAX_DEVICE_TYPES"
    override def isProtoCompileTimeMaxDeviceTypes: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  final case class Unrecognized(unrecognizedValue: _root_.scala.Int) extends DeviceTypeProto(unrecognizedValue) with _root_.scalapb.UnrecognizedEnum
  
  lazy val values = scala.collection.immutable.Seq(PROTO_CPU, PROTO_CUDA, PROTO_MKLDNN, PROTO_OPENGL, PROTO_OPENCL, PROTO_IDEEP, PROTO_HIP, PROTO_FPGA, PROTO_MSNPU, PROTO_XLA, PROTO_COMPILE_TIME_MAX_DEVICE_TYPES)
  def fromValue(__value: _root_.scala.Int): DeviceTypeProto = __value match {
    case 0 => PROTO_CPU
    case 1 => PROTO_CUDA
    case 2 => PROTO_MKLDNN
    case 3 => PROTO_OPENGL
    case 4 => PROTO_OPENCL
    case 5 => PROTO_IDEEP
    case 6 => PROTO_HIP
    case 7 => PROTO_FPGA
    case 8 => PROTO_MSNPU
    case 9 => PROTO_XLA
    case 10 => PROTO_COMPILE_TIME_MAX_DEVICE_TYPES
    case __other => Unrecognized(__other)
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = Caffe2Proto.javaDescriptor.getEnumTypes().get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = Caffe2Proto.scalaDescriptor.enums(0)
}