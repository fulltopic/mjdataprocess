// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO2

package caffe2.predictor_consts

/** @param mETANETDEF
  *   Important - to ensure ordered traversal of the DB, these must be
  *   set in the given (lexicographic) order in the input DBReader.
  * @param pARAMETERSBLOBTYPE
  *   Blob types used in MetaNetDef blobs
  * @param gLOBALINITNETTYPE
  *   Net types used in MetaNetDef nets
  * @param sHAPEINFOBLOB
  *   Shape info blob name
  * @param dEFERREDBLOBREADER
  *   Sequential blob reader name
  */
@SerialVersionUID(0L)
final case class PredictorConsts(
    mETANETDEF: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None,
    pREDICTORDBREADER: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None,
    pARAMETERSBLOBTYPE: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None,
    iNPUTSBLOBTYPE: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None,
    oUTPUTSBLOBTYPE: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None,
    gLOBALINITNETTYPE: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None,
    pREDICTINITNETTYPE: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None,
    pREDICTNETTYPE: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None,
    sINGLEPREDICTOR: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None,
    mULTIPREDICTOR: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None,
    tRAININITPLANTYPE: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None,
    tRAINPLANTYPE: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None,
    sHAPEINFOBLOB: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None,
    dEFERREDBLOBREADER: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[PredictorConsts] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      if (mETANETDEF.isDefined) {
        val __value = mETANETDEF.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
      };
      if (pREDICTORDBREADER.isDefined) {
        val __value = pREDICTORDBREADER.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
      };
      if (pARAMETERSBLOBTYPE.isDefined) {
        val __value = pARAMETERSBLOBTYPE.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
      };
      if (iNPUTSBLOBTYPE.isDefined) {
        val __value = iNPUTSBLOBTYPE.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, __value)
      };
      if (oUTPUTSBLOBTYPE.isDefined) {
        val __value = oUTPUTSBLOBTYPE.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(5, __value)
      };
      if (gLOBALINITNETTYPE.isDefined) {
        val __value = gLOBALINITNETTYPE.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(6, __value)
      };
      if (pREDICTINITNETTYPE.isDefined) {
        val __value = pREDICTINITNETTYPE.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(7, __value)
      };
      if (pREDICTNETTYPE.isDefined) {
        val __value = pREDICTNETTYPE.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(8, __value)
      };
      if (sINGLEPREDICTOR.isDefined) {
        val __value = sINGLEPREDICTOR.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(9, __value)
      };
      if (mULTIPREDICTOR.isDefined) {
        val __value = mULTIPREDICTOR.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(10, __value)
      };
      if (tRAININITPLANTYPE.isDefined) {
        val __value = tRAININITPLANTYPE.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(11, __value)
      };
      if (tRAINPLANTYPE.isDefined) {
        val __value = tRAINPLANTYPE.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(12, __value)
      };
      if (sHAPEINFOBLOB.isDefined) {
        val __value = sHAPEINFOBLOB.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(13, __value)
      };
      if (dEFERREDBLOBREADER.isDefined) {
        val __value = dEFERREDBLOBREADER.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(14, __value)
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      mETANETDEF.foreach { __v =>
        val __m = __v
        _output__.writeString(1, __m)
      };
      pREDICTORDBREADER.foreach { __v =>
        val __m = __v
        _output__.writeString(2, __m)
      };
      pARAMETERSBLOBTYPE.foreach { __v =>
        val __m = __v
        _output__.writeString(3, __m)
      };
      iNPUTSBLOBTYPE.foreach { __v =>
        val __m = __v
        _output__.writeString(4, __m)
      };
      oUTPUTSBLOBTYPE.foreach { __v =>
        val __m = __v
        _output__.writeString(5, __m)
      };
      gLOBALINITNETTYPE.foreach { __v =>
        val __m = __v
        _output__.writeString(6, __m)
      };
      pREDICTINITNETTYPE.foreach { __v =>
        val __m = __v
        _output__.writeString(7, __m)
      };
      pREDICTNETTYPE.foreach { __v =>
        val __m = __v
        _output__.writeString(8, __m)
      };
      sINGLEPREDICTOR.foreach { __v =>
        val __m = __v
        _output__.writeString(9, __m)
      };
      mULTIPREDICTOR.foreach { __v =>
        val __m = __v
        _output__.writeString(10, __m)
      };
      tRAININITPLANTYPE.foreach { __v =>
        val __m = __v
        _output__.writeString(11, __m)
      };
      tRAINPLANTYPE.foreach { __v =>
        val __m = __v
        _output__.writeString(12, __m)
      };
      sHAPEINFOBLOB.foreach { __v =>
        val __m = __v
        _output__.writeString(13, __m)
      };
      dEFERREDBLOBREADER.foreach { __v =>
        val __m = __v
        _output__.writeString(14, __m)
      };
      unknownFields.writeTo(_output__)
    }
    def getMETANETDEF: _root_.scala.Predef.String = mETANETDEF.getOrElse("!!META_NET_DEF")
    def clearMETANETDEF: PredictorConsts = copy(mETANETDEF = _root_.scala.None)
    def withMETANETDEF(__v: _root_.scala.Predef.String): PredictorConsts = copy(mETANETDEF = Option(__v))
    def getPREDICTORDBREADER: _root_.scala.Predef.String = pREDICTORDBREADER.getOrElse("!!PREDICTOR_DBREADER")
    def clearPREDICTORDBREADER: PredictorConsts = copy(pREDICTORDBREADER = _root_.scala.None)
    def withPREDICTORDBREADER(__v: _root_.scala.Predef.String): PredictorConsts = copy(pREDICTORDBREADER = Option(__v))
    def getPARAMETERSBLOBTYPE: _root_.scala.Predef.String = pARAMETERSBLOBTYPE.getOrElse("PARAMETERS_BLOB_TYPE")
    def clearPARAMETERSBLOBTYPE: PredictorConsts = copy(pARAMETERSBLOBTYPE = _root_.scala.None)
    def withPARAMETERSBLOBTYPE(__v: _root_.scala.Predef.String): PredictorConsts = copy(pARAMETERSBLOBTYPE = Option(__v))
    def getINPUTSBLOBTYPE: _root_.scala.Predef.String = iNPUTSBLOBTYPE.getOrElse("INPUTS_BLOB_TYPE")
    def clearINPUTSBLOBTYPE: PredictorConsts = copy(iNPUTSBLOBTYPE = _root_.scala.None)
    def withINPUTSBLOBTYPE(__v: _root_.scala.Predef.String): PredictorConsts = copy(iNPUTSBLOBTYPE = Option(__v))
    def getOUTPUTSBLOBTYPE: _root_.scala.Predef.String = oUTPUTSBLOBTYPE.getOrElse("OUTPUTS_BLOB_TYPE")
    def clearOUTPUTSBLOBTYPE: PredictorConsts = copy(oUTPUTSBLOBTYPE = _root_.scala.None)
    def withOUTPUTSBLOBTYPE(__v: _root_.scala.Predef.String): PredictorConsts = copy(oUTPUTSBLOBTYPE = Option(__v))
    def getGLOBALINITNETTYPE: _root_.scala.Predef.String = gLOBALINITNETTYPE.getOrElse("GLOBAL_INIT_NET_TYPE")
    def clearGLOBALINITNETTYPE: PredictorConsts = copy(gLOBALINITNETTYPE = _root_.scala.None)
    def withGLOBALINITNETTYPE(__v: _root_.scala.Predef.String): PredictorConsts = copy(gLOBALINITNETTYPE = Option(__v))
    def getPREDICTINITNETTYPE: _root_.scala.Predef.String = pREDICTINITNETTYPE.getOrElse("PREDICT_INIT_NET_TYPE")
    def clearPREDICTINITNETTYPE: PredictorConsts = copy(pREDICTINITNETTYPE = _root_.scala.None)
    def withPREDICTINITNETTYPE(__v: _root_.scala.Predef.String): PredictorConsts = copy(pREDICTINITNETTYPE = Option(__v))
    def getPREDICTNETTYPE: _root_.scala.Predef.String = pREDICTNETTYPE.getOrElse("PREDICT_NET_TYPE")
    def clearPREDICTNETTYPE: PredictorConsts = copy(pREDICTNETTYPE = _root_.scala.None)
    def withPREDICTNETTYPE(__v: _root_.scala.Predef.String): PredictorConsts = copy(pREDICTNETTYPE = Option(__v))
    def getSINGLEPREDICTOR: _root_.scala.Predef.String = sINGLEPREDICTOR.getOrElse("SINGLE_PREDICTOR")
    def clearSINGLEPREDICTOR: PredictorConsts = copy(sINGLEPREDICTOR = _root_.scala.None)
    def withSINGLEPREDICTOR(__v: _root_.scala.Predef.String): PredictorConsts = copy(sINGLEPREDICTOR = Option(__v))
    def getMULTIPREDICTOR: _root_.scala.Predef.String = mULTIPREDICTOR.getOrElse("MULTI_PREDICTOR")
    def clearMULTIPREDICTOR: PredictorConsts = copy(mULTIPREDICTOR = _root_.scala.None)
    def withMULTIPREDICTOR(__v: _root_.scala.Predef.String): PredictorConsts = copy(mULTIPREDICTOR = Option(__v))
    def getTRAININITPLANTYPE: _root_.scala.Predef.String = tRAININITPLANTYPE.getOrElse("TRAIN_INIT_PLAN_TYPE")
    def clearTRAININITPLANTYPE: PredictorConsts = copy(tRAININITPLANTYPE = _root_.scala.None)
    def withTRAININITPLANTYPE(__v: _root_.scala.Predef.String): PredictorConsts = copy(tRAININITPLANTYPE = Option(__v))
    def getTRAINPLANTYPE: _root_.scala.Predef.String = tRAINPLANTYPE.getOrElse("TRAIN_PLAN_TYPE")
    def clearTRAINPLANTYPE: PredictorConsts = copy(tRAINPLANTYPE = _root_.scala.None)
    def withTRAINPLANTYPE(__v: _root_.scala.Predef.String): PredictorConsts = copy(tRAINPLANTYPE = Option(__v))
    def getSHAPEINFOBLOB: _root_.scala.Predef.String = sHAPEINFOBLOB.getOrElse("SHAPE_INFO_BLOB")
    def clearSHAPEINFOBLOB: PredictorConsts = copy(sHAPEINFOBLOB = _root_.scala.None)
    def withSHAPEINFOBLOB(__v: _root_.scala.Predef.String): PredictorConsts = copy(sHAPEINFOBLOB = Option(__v))
    def getDEFERREDBLOBREADER: _root_.scala.Predef.String = dEFERREDBLOBREADER.getOrElse("__DEFERRED_BLOB_READER__")
    def clearDEFERREDBLOBREADER: PredictorConsts = copy(dEFERREDBLOBREADER = _root_.scala.None)
    def withDEFERREDBLOBREADER(__v: _root_.scala.Predef.String): PredictorConsts = copy(dEFERREDBLOBREADER = Option(__v))
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => mETANETDEF.orNull
        case 2 => pREDICTORDBREADER.orNull
        case 3 => pARAMETERSBLOBTYPE.orNull
        case 4 => iNPUTSBLOBTYPE.orNull
        case 5 => oUTPUTSBLOBTYPE.orNull
        case 6 => gLOBALINITNETTYPE.orNull
        case 7 => pREDICTINITNETTYPE.orNull
        case 8 => pREDICTNETTYPE.orNull
        case 9 => sINGLEPREDICTOR.orNull
        case 10 => mULTIPREDICTOR.orNull
        case 11 => tRAININITPLANTYPE.orNull
        case 12 => tRAINPLANTYPE.orNull
        case 13 => sHAPEINFOBLOB.orNull
        case 14 => dEFERREDBLOBREADER.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => mETANETDEF.map(_root_.scalapb.descriptors.PString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 2 => pREDICTORDBREADER.map(_root_.scalapb.descriptors.PString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 3 => pARAMETERSBLOBTYPE.map(_root_.scalapb.descriptors.PString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 4 => iNPUTSBLOBTYPE.map(_root_.scalapb.descriptors.PString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 5 => oUTPUTSBLOBTYPE.map(_root_.scalapb.descriptors.PString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 6 => gLOBALINITNETTYPE.map(_root_.scalapb.descriptors.PString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 7 => pREDICTINITNETTYPE.map(_root_.scalapb.descriptors.PString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 8 => pREDICTNETTYPE.map(_root_.scalapb.descriptors.PString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 9 => sINGLEPREDICTOR.map(_root_.scalapb.descriptors.PString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 10 => mULTIPREDICTOR.map(_root_.scalapb.descriptors.PString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 11 => tRAININITPLANTYPE.map(_root_.scalapb.descriptors.PString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 12 => tRAINPLANTYPE.map(_root_.scalapb.descriptors.PString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 13 => sHAPEINFOBLOB.map(_root_.scalapb.descriptors.PString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 14 => dEFERREDBLOBREADER.map(_root_.scalapb.descriptors.PString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = caffe2.predictor_consts.PredictorConsts
    // @@protoc_insertion_point(GeneratedMessage[caffe2.PredictorConsts])
}

object PredictorConsts extends scalapb.GeneratedMessageCompanion[caffe2.predictor_consts.PredictorConsts] with scalapb.HasBuilder[caffe2.predictor_consts.PredictorConsts] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[caffe2.predictor_consts.PredictorConsts] with scalapb.HasBuilder[caffe2.predictor_consts.PredictorConsts] = this
  def merge(`_message__`: caffe2.predictor_consts.PredictorConsts, `_input__`: _root_.com.google.protobuf.CodedInputStream): caffe2.predictor_consts.PredictorConsts = newBuilder(_message__).merge(_input__).result()
  implicit def messageReads: _root_.scalapb.descriptors.Reads[caffe2.predictor_consts.PredictorConsts] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      caffe2.predictor_consts.PredictorConsts(
        mETANETDEF = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]),
        pREDICTORDBREADER = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]),
        pARAMETERSBLOBTYPE = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]),
        iNPUTSBLOBTYPE = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]),
        oUTPUTSBLOBTYPE = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]),
        gLOBALINITNETTYPE = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]),
        pREDICTINITNETTYPE = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]),
        pREDICTNETTYPE = __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]),
        sINGLEPREDICTOR = __fieldsMap.get(scalaDescriptor.findFieldByNumber(9).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]),
        mULTIPREDICTOR = __fieldsMap.get(scalaDescriptor.findFieldByNumber(10).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]),
        tRAININITPLANTYPE = __fieldsMap.get(scalaDescriptor.findFieldByNumber(11).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]),
        tRAINPLANTYPE = __fieldsMap.get(scalaDescriptor.findFieldByNumber(12).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]),
        sHAPEINFOBLOB = __fieldsMap.get(scalaDescriptor.findFieldByNumber(13).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]),
        dEFERREDBLOBREADER = __fieldsMap.get(scalaDescriptor.findFieldByNumber(14).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = PredictorConstsProto.javaDescriptor.getMessageTypes().get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = PredictorConstsProto.scalaDescriptor.messages(0)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = caffe2.predictor_consts.PredictorConsts(
    mETANETDEF = _root_.scala.None,
    pREDICTORDBREADER = _root_.scala.None,
    pARAMETERSBLOBTYPE = _root_.scala.None,
    iNPUTSBLOBTYPE = _root_.scala.None,
    oUTPUTSBLOBTYPE = _root_.scala.None,
    gLOBALINITNETTYPE = _root_.scala.None,
    pREDICTINITNETTYPE = _root_.scala.None,
    pREDICTNETTYPE = _root_.scala.None,
    sINGLEPREDICTOR = _root_.scala.None,
    mULTIPREDICTOR = _root_.scala.None,
    tRAININITPLANTYPE = _root_.scala.None,
    tRAINPLANTYPE = _root_.scala.None,
    sHAPEINFOBLOB = _root_.scala.None,
    dEFERREDBLOBREADER = _root_.scala.None
  )
  final class Builder private (
    private var __mETANETDEF: _root_.scala.Option[_root_.scala.Predef.String],
    private var __pREDICTORDBREADER: _root_.scala.Option[_root_.scala.Predef.String],
    private var __pARAMETERSBLOBTYPE: _root_.scala.Option[_root_.scala.Predef.String],
    private var __iNPUTSBLOBTYPE: _root_.scala.Option[_root_.scala.Predef.String],
    private var __oUTPUTSBLOBTYPE: _root_.scala.Option[_root_.scala.Predef.String],
    private var __gLOBALINITNETTYPE: _root_.scala.Option[_root_.scala.Predef.String],
    private var __pREDICTINITNETTYPE: _root_.scala.Option[_root_.scala.Predef.String],
    private var __pREDICTNETTYPE: _root_.scala.Option[_root_.scala.Predef.String],
    private var __sINGLEPREDICTOR: _root_.scala.Option[_root_.scala.Predef.String],
    private var __mULTIPREDICTOR: _root_.scala.Option[_root_.scala.Predef.String],
    private var __tRAININITPLANTYPE: _root_.scala.Option[_root_.scala.Predef.String],
    private var __tRAINPLANTYPE: _root_.scala.Option[_root_.scala.Predef.String],
    private var __sHAPEINFOBLOB: _root_.scala.Option[_root_.scala.Predef.String],
    private var __dEFERREDBLOBREADER: _root_.scala.Option[_root_.scala.Predef.String],
    private var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder
  ) extends _root_.scalapb.MessageBuilder[caffe2.predictor_consts.PredictorConsts] {
    def merge(`_input__`: _root_.com.google.protobuf.CodedInputStream): this.type = {
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __mETANETDEF = Option(_input__.readStringRequireUtf8())
          case 18 =>
            __pREDICTORDBREADER = Option(_input__.readStringRequireUtf8())
          case 26 =>
            __pARAMETERSBLOBTYPE = Option(_input__.readStringRequireUtf8())
          case 34 =>
            __iNPUTSBLOBTYPE = Option(_input__.readStringRequireUtf8())
          case 42 =>
            __oUTPUTSBLOBTYPE = Option(_input__.readStringRequireUtf8())
          case 50 =>
            __gLOBALINITNETTYPE = Option(_input__.readStringRequireUtf8())
          case 58 =>
            __pREDICTINITNETTYPE = Option(_input__.readStringRequireUtf8())
          case 66 =>
            __pREDICTNETTYPE = Option(_input__.readStringRequireUtf8())
          case 74 =>
            __sINGLEPREDICTOR = Option(_input__.readStringRequireUtf8())
          case 82 =>
            __mULTIPREDICTOR = Option(_input__.readStringRequireUtf8())
          case 90 =>
            __tRAININITPLANTYPE = Option(_input__.readStringRequireUtf8())
          case 98 =>
            __tRAINPLANTYPE = Option(_input__.readStringRequireUtf8())
          case 106 =>
            __sHAPEINFOBLOB = Option(_input__.readStringRequireUtf8())
          case 114 =>
            __dEFERREDBLOBREADER = Option(_input__.readStringRequireUtf8())
          case tag =>
            if (_unknownFields__ == null) {
              _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
            }
            _unknownFields__.parseField(tag, _input__)
        }
      }
      this
    }
    def result(): caffe2.predictor_consts.PredictorConsts = {
      caffe2.predictor_consts.PredictorConsts(
        mETANETDEF = __mETANETDEF,
        pREDICTORDBREADER = __pREDICTORDBREADER,
        pARAMETERSBLOBTYPE = __pARAMETERSBLOBTYPE,
        iNPUTSBLOBTYPE = __iNPUTSBLOBTYPE,
        oUTPUTSBLOBTYPE = __oUTPUTSBLOBTYPE,
        gLOBALINITNETTYPE = __gLOBALINITNETTYPE,
        pREDICTINITNETTYPE = __pREDICTINITNETTYPE,
        pREDICTNETTYPE = __pREDICTNETTYPE,
        sINGLEPREDICTOR = __sINGLEPREDICTOR,
        mULTIPREDICTOR = __mULTIPREDICTOR,
        tRAININITPLANTYPE = __tRAININITPLANTYPE,
        tRAINPLANTYPE = __tRAINPLANTYPE,
        sHAPEINFOBLOB = __sHAPEINFOBLOB,
        dEFERREDBLOBREADER = __dEFERREDBLOBREADER,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
      )
    }
  }
  object Builder extends _root_.scalapb.MessageBuilderCompanion[caffe2.predictor_consts.PredictorConsts, caffe2.predictor_consts.PredictorConsts.Builder] {
    def apply(): Builder = new Builder(
      __mETANETDEF = _root_.scala.None,
      __pREDICTORDBREADER = _root_.scala.None,
      __pARAMETERSBLOBTYPE = _root_.scala.None,
      __iNPUTSBLOBTYPE = _root_.scala.None,
      __oUTPUTSBLOBTYPE = _root_.scala.None,
      __gLOBALINITNETTYPE = _root_.scala.None,
      __pREDICTINITNETTYPE = _root_.scala.None,
      __pREDICTNETTYPE = _root_.scala.None,
      __sINGLEPREDICTOR = _root_.scala.None,
      __mULTIPREDICTOR = _root_.scala.None,
      __tRAININITPLANTYPE = _root_.scala.None,
      __tRAINPLANTYPE = _root_.scala.None,
      __sHAPEINFOBLOB = _root_.scala.None,
      __dEFERREDBLOBREADER = _root_.scala.None,
      `_unknownFields__` = null
    )
    def apply(`_message__`: caffe2.predictor_consts.PredictorConsts): Builder = new Builder(
        __mETANETDEF = _message__.mETANETDEF,
        __pREDICTORDBREADER = _message__.pREDICTORDBREADER,
        __pARAMETERSBLOBTYPE = _message__.pARAMETERSBLOBTYPE,
        __iNPUTSBLOBTYPE = _message__.iNPUTSBLOBTYPE,
        __oUTPUTSBLOBTYPE = _message__.oUTPUTSBLOBTYPE,
        __gLOBALINITNETTYPE = _message__.gLOBALINITNETTYPE,
        __pREDICTINITNETTYPE = _message__.pREDICTINITNETTYPE,
        __pREDICTNETTYPE = _message__.pREDICTNETTYPE,
        __sINGLEPREDICTOR = _message__.sINGLEPREDICTOR,
        __mULTIPREDICTOR = _message__.mULTIPREDICTOR,
        __tRAININITPLANTYPE = _message__.tRAININITPLANTYPE,
        __tRAINPLANTYPE = _message__.tRAINPLANTYPE,
        __sHAPEINFOBLOB = _message__.sHAPEINFOBLOB,
        __dEFERREDBLOBREADER = _message__.dEFERREDBLOBREADER,
        `_unknownFields__` = new _root_.scalapb.UnknownFieldSet.Builder(_message__.unknownFields)
    )
  }
  def newBuilder: Builder = caffe2.predictor_consts.PredictorConsts.Builder()
  def newBuilder(`_message__`: caffe2.predictor_consts.PredictorConsts): Builder = caffe2.predictor_consts.PredictorConsts.Builder(_message__)
  implicit class PredictorConstsLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, caffe2.predictor_consts.PredictorConsts]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, caffe2.predictor_consts.PredictorConsts](_l) {
    def mETANETDEF: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getMETANETDEF)((c_, f_) => c_.copy(mETANETDEF = Option(f_)))
    def optionalMETANETDEF: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Predef.String]] = field(_.mETANETDEF)((c_, f_) => c_.copy(mETANETDEF = f_))
    def pREDICTORDBREADER: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getPREDICTORDBREADER)((c_, f_) => c_.copy(pREDICTORDBREADER = Option(f_)))
    def optionalPREDICTORDBREADER: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Predef.String]] = field(_.pREDICTORDBREADER)((c_, f_) => c_.copy(pREDICTORDBREADER = f_))
    def pARAMETERSBLOBTYPE: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getPARAMETERSBLOBTYPE)((c_, f_) => c_.copy(pARAMETERSBLOBTYPE = Option(f_)))
    def optionalPARAMETERSBLOBTYPE: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Predef.String]] = field(_.pARAMETERSBLOBTYPE)((c_, f_) => c_.copy(pARAMETERSBLOBTYPE = f_))
    def iNPUTSBLOBTYPE: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getINPUTSBLOBTYPE)((c_, f_) => c_.copy(iNPUTSBLOBTYPE = Option(f_)))
    def optionalINPUTSBLOBTYPE: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Predef.String]] = field(_.iNPUTSBLOBTYPE)((c_, f_) => c_.copy(iNPUTSBLOBTYPE = f_))
    def oUTPUTSBLOBTYPE: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getOUTPUTSBLOBTYPE)((c_, f_) => c_.copy(oUTPUTSBLOBTYPE = Option(f_)))
    def optionalOUTPUTSBLOBTYPE: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Predef.String]] = field(_.oUTPUTSBLOBTYPE)((c_, f_) => c_.copy(oUTPUTSBLOBTYPE = f_))
    def gLOBALINITNETTYPE: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getGLOBALINITNETTYPE)((c_, f_) => c_.copy(gLOBALINITNETTYPE = Option(f_)))
    def optionalGLOBALINITNETTYPE: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Predef.String]] = field(_.gLOBALINITNETTYPE)((c_, f_) => c_.copy(gLOBALINITNETTYPE = f_))
    def pREDICTINITNETTYPE: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getPREDICTINITNETTYPE)((c_, f_) => c_.copy(pREDICTINITNETTYPE = Option(f_)))
    def optionalPREDICTINITNETTYPE: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Predef.String]] = field(_.pREDICTINITNETTYPE)((c_, f_) => c_.copy(pREDICTINITNETTYPE = f_))
    def pREDICTNETTYPE: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getPREDICTNETTYPE)((c_, f_) => c_.copy(pREDICTNETTYPE = Option(f_)))
    def optionalPREDICTNETTYPE: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Predef.String]] = field(_.pREDICTNETTYPE)((c_, f_) => c_.copy(pREDICTNETTYPE = f_))
    def sINGLEPREDICTOR: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getSINGLEPREDICTOR)((c_, f_) => c_.copy(sINGLEPREDICTOR = Option(f_)))
    def optionalSINGLEPREDICTOR: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Predef.String]] = field(_.sINGLEPREDICTOR)((c_, f_) => c_.copy(sINGLEPREDICTOR = f_))
    def mULTIPREDICTOR: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getMULTIPREDICTOR)((c_, f_) => c_.copy(mULTIPREDICTOR = Option(f_)))
    def optionalMULTIPREDICTOR: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Predef.String]] = field(_.mULTIPREDICTOR)((c_, f_) => c_.copy(mULTIPREDICTOR = f_))
    def tRAININITPLANTYPE: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getTRAININITPLANTYPE)((c_, f_) => c_.copy(tRAININITPLANTYPE = Option(f_)))
    def optionalTRAININITPLANTYPE: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Predef.String]] = field(_.tRAININITPLANTYPE)((c_, f_) => c_.copy(tRAININITPLANTYPE = f_))
    def tRAINPLANTYPE: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getTRAINPLANTYPE)((c_, f_) => c_.copy(tRAINPLANTYPE = Option(f_)))
    def optionalTRAINPLANTYPE: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Predef.String]] = field(_.tRAINPLANTYPE)((c_, f_) => c_.copy(tRAINPLANTYPE = f_))
    def sHAPEINFOBLOB: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getSHAPEINFOBLOB)((c_, f_) => c_.copy(sHAPEINFOBLOB = Option(f_)))
    def optionalSHAPEINFOBLOB: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Predef.String]] = field(_.sHAPEINFOBLOB)((c_, f_) => c_.copy(sHAPEINFOBLOB = f_))
    def dEFERREDBLOBREADER: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getDEFERREDBLOBREADER)((c_, f_) => c_.copy(dEFERREDBLOBREADER = Option(f_)))
    def optionalDEFERREDBLOBREADER: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Predef.String]] = field(_.dEFERREDBLOBREADER)((c_, f_) => c_.copy(dEFERREDBLOBREADER = f_))
  }
  final val META_NET_DEF_FIELD_NUMBER = 1
  final val PREDICTOR_DBREADER_FIELD_NUMBER = 2
  final val PARAMETERS_BLOB_TYPE_FIELD_NUMBER = 3
  final val INPUTS_BLOB_TYPE_FIELD_NUMBER = 4
  final val OUTPUTS_BLOB_TYPE_FIELD_NUMBER = 5
  final val GLOBAL_INIT_NET_TYPE_FIELD_NUMBER = 6
  final val PREDICT_INIT_NET_TYPE_FIELD_NUMBER = 7
  final val PREDICT_NET_TYPE_FIELD_NUMBER = 8
  final val SINGLE_PREDICTOR_FIELD_NUMBER = 9
  final val MULTI_PREDICTOR_FIELD_NUMBER = 10
  final val TRAIN_INIT_PLAN_TYPE_FIELD_NUMBER = 11
  final val TRAIN_PLAN_TYPE_FIELD_NUMBER = 12
  final val SHAPE_INFO_BLOB_FIELD_NUMBER = 13
  final val DEFERRED_BLOB_READER_FIELD_NUMBER = 14
  def of(
    mETANETDEF: _root_.scala.Option[_root_.scala.Predef.String],
    pREDICTORDBREADER: _root_.scala.Option[_root_.scala.Predef.String],
    pARAMETERSBLOBTYPE: _root_.scala.Option[_root_.scala.Predef.String],
    iNPUTSBLOBTYPE: _root_.scala.Option[_root_.scala.Predef.String],
    oUTPUTSBLOBTYPE: _root_.scala.Option[_root_.scala.Predef.String],
    gLOBALINITNETTYPE: _root_.scala.Option[_root_.scala.Predef.String],
    pREDICTINITNETTYPE: _root_.scala.Option[_root_.scala.Predef.String],
    pREDICTNETTYPE: _root_.scala.Option[_root_.scala.Predef.String],
    sINGLEPREDICTOR: _root_.scala.Option[_root_.scala.Predef.String],
    mULTIPREDICTOR: _root_.scala.Option[_root_.scala.Predef.String],
    tRAININITPLANTYPE: _root_.scala.Option[_root_.scala.Predef.String],
    tRAINPLANTYPE: _root_.scala.Option[_root_.scala.Predef.String],
    sHAPEINFOBLOB: _root_.scala.Option[_root_.scala.Predef.String],
    dEFERREDBLOBREADER: _root_.scala.Option[_root_.scala.Predef.String]
  ): _root_.caffe2.predictor_consts.PredictorConsts = _root_.caffe2.predictor_consts.PredictorConsts(
    mETANETDEF,
    pREDICTORDBREADER,
    pARAMETERSBLOBTYPE,
    iNPUTSBLOBTYPE,
    oUTPUTSBLOBTYPE,
    gLOBALINITNETTYPE,
    pREDICTINITNETTYPE,
    pREDICTNETTYPE,
    sINGLEPREDICTOR,
    mULTIPREDICTOR,
    tRAININITPLANTYPE,
    tRAINPLANTYPE,
    sHAPEINFOBLOB,
    dEFERREDBLOBREADER
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[caffe2.PredictorConsts])
}
