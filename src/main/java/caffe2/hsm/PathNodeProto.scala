// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO2

package caffe2.hsm

/** Represents a node in the path from the root node all the way down to the
  * word (leaf).
  *
  * @param index
  *   Parameter matrix offset for this node
  * @param length
  *   Number of children
  * @param target
  *   Index of the next node in the path
  */
@SerialVersionUID(0L)
final case class PathNodeProto(
    index: _root_.scala.Option[_root_.scala.Int] = _root_.scala.None,
    length: _root_.scala.Option[_root_.scala.Int] = _root_.scala.None,
    target: _root_.scala.Option[_root_.scala.Int] = _root_.scala.None,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[PathNodeProto] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      if (index.isDefined) {
        val __value = index.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(1, __value)
      };
      if (length.isDefined) {
        val __value = length.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(2, __value)
      };
      if (target.isDefined) {
        val __value = target.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(3, __value)
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      index.foreach { __v =>
        val __m = __v
        _output__.writeInt32(1, __m)
      };
      length.foreach { __v =>
        val __m = __v
        _output__.writeInt32(2, __m)
      };
      target.foreach { __v =>
        val __m = __v
        _output__.writeInt32(3, __m)
      };
      unknownFields.writeTo(_output__)
    }
    def getIndex: _root_.scala.Int = index.getOrElse(0)
    def clearIndex: PathNodeProto = copy(index = _root_.scala.None)
    def withIndex(__v: _root_.scala.Int): PathNodeProto = copy(index = Option(__v))
    def getLength: _root_.scala.Int = length.getOrElse(0)
    def clearLength: PathNodeProto = copy(length = _root_.scala.None)
    def withLength(__v: _root_.scala.Int): PathNodeProto = copy(length = Option(__v))
    def getTarget: _root_.scala.Int = target.getOrElse(0)
    def clearTarget: PathNodeProto = copy(target = _root_.scala.None)
    def withTarget(__v: _root_.scala.Int): PathNodeProto = copy(target = Option(__v))
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => index.orNull
        case 2 => length.orNull
        case 3 => target.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => index.map(_root_.scalapb.descriptors.PInt(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 2 => length.map(_root_.scalapb.descriptors.PInt(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 3 => target.map(_root_.scalapb.descriptors.PInt(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = caffe2.hsm.PathNodeProto
    // @@protoc_insertion_point(GeneratedMessage[caffe2.PathNodeProto])
}

object PathNodeProto extends scalapb.GeneratedMessageCompanion[caffe2.hsm.PathNodeProto] with scalapb.HasBuilder[caffe2.hsm.PathNodeProto] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[caffe2.hsm.PathNodeProto] with scalapb.HasBuilder[caffe2.hsm.PathNodeProto] = this
  def merge(`_message__`: caffe2.hsm.PathNodeProto, `_input__`: _root_.com.google.protobuf.CodedInputStream): caffe2.hsm.PathNodeProto = newBuilder(_message__).merge(_input__).result()
  implicit def messageReads: _root_.scalapb.descriptors.Reads[caffe2.hsm.PathNodeProto] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      caffe2.hsm.PathNodeProto(
        index = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Int]]),
        length = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Int]]),
        target = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Int]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = HsmProto.javaDescriptor.getMessageTypes().get(4)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = HsmProto.scalaDescriptor.messages(4)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = caffe2.hsm.PathNodeProto(
    index = _root_.scala.None,
    length = _root_.scala.None,
    target = _root_.scala.None
  )
  final class Builder private (
    private var __index: _root_.scala.Option[_root_.scala.Int],
    private var __length: _root_.scala.Option[_root_.scala.Int],
    private var __target: _root_.scala.Option[_root_.scala.Int],
    private var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder
  ) extends _root_.scalapb.MessageBuilder[caffe2.hsm.PathNodeProto] {
    def merge(`_input__`: _root_.com.google.protobuf.CodedInputStream): this.type = {
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 8 =>
            __index = Option(_input__.readInt32())
          case 16 =>
            __length = Option(_input__.readInt32())
          case 24 =>
            __target = Option(_input__.readInt32())
          case tag =>
            if (_unknownFields__ == null) {
              _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
            }
            _unknownFields__.parseField(tag, _input__)
        }
      }
      this
    }
    def result(): caffe2.hsm.PathNodeProto = {
      caffe2.hsm.PathNodeProto(
        index = __index,
        length = __length,
        target = __target,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
      )
    }
  }
  object Builder extends _root_.scalapb.MessageBuilderCompanion[caffe2.hsm.PathNodeProto, caffe2.hsm.PathNodeProto.Builder] {
    def apply(): Builder = new Builder(
      __index = _root_.scala.None,
      __length = _root_.scala.None,
      __target = _root_.scala.None,
      `_unknownFields__` = null
    )
    def apply(`_message__`: caffe2.hsm.PathNodeProto): Builder = new Builder(
        __index = _message__.index,
        __length = _message__.length,
        __target = _message__.target,
        `_unknownFields__` = new _root_.scalapb.UnknownFieldSet.Builder(_message__.unknownFields)
    )
  }
  def newBuilder: Builder = caffe2.hsm.PathNodeProto.Builder()
  def newBuilder(`_message__`: caffe2.hsm.PathNodeProto): Builder = caffe2.hsm.PathNodeProto.Builder(_message__)
  implicit class PathNodeProtoLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, caffe2.hsm.PathNodeProto]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, caffe2.hsm.PathNodeProto](_l) {
    def index: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.getIndex)((c_, f_) => c_.copy(index = Option(f_)))
    def optionalIndex: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Int]] = field(_.index)((c_, f_) => c_.copy(index = f_))
    def length: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.getLength)((c_, f_) => c_.copy(length = Option(f_)))
    def optionalLength: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Int]] = field(_.length)((c_, f_) => c_.copy(length = f_))
    def target: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.getTarget)((c_, f_) => c_.copy(target = Option(f_)))
    def optionalTarget: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Int]] = field(_.target)((c_, f_) => c_.copy(target = f_))
  }
  final val INDEX_FIELD_NUMBER = 1
  final val LENGTH_FIELD_NUMBER = 2
  final val TARGET_FIELD_NUMBER = 3
  def of(
    index: _root_.scala.Option[_root_.scala.Int],
    length: _root_.scala.Option[_root_.scala.Int],
    target: _root_.scala.Option[_root_.scala.Int]
  ): _root_.caffe2.hsm.PathNodeProto = _root_.caffe2.hsm.PathNodeProto(
    index,
    length,
    target
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[caffe2.PathNodeProto])
}
